// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// autocor
arma::colvec autocor(arma::colvec& x, int& lag_max);
RcppExport SEXP _rqapp_autocor(SEXP xSEXP, SEXP lag_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int& >::type lag_max(lag_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(autocor(x, lag_max));
    return rcpp_result_gen;
END_RCPP
}
// drpd_cat
List drpd_cat(StringVector t1, StringVector t2, int ws);
RcppExport SEXP _rqapp_drpd_cat(SEXP t1SEXP, SEXP t2SEXP, SEXP wsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< int >::type ws(wsSEXP);
    rcpp_result_gen = Rcpp::wrap(drpd_cat(t1, t2, ws));
    return rcpp_result_gen;
END_RCPP
}
// seq_int
IntegerVector seq_int(int from, int to);
RcppExport SEXP _rqapp_seq_int(SEXP fromSEXP, SEXP toSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type from(fromSEXP);
    Rcpp::traits::input_parameter< int >::type to(toSEXP);
    rcpp_result_gen = Rcpp::wrap(seq_int(from, to));
    return rcpp_result_gen;
END_RCPP
}
// count_if
double count_if(LogicalVector x);
RcppExport SEXP _rqapp_count_if(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(count_if(x));
    return rcpp_result_gen;
END_RCPP
}
// drpd_numeric
List drpd_numeric(arma::vec t1, arma::vec t2, int ws, double radius);
RcppExport SEXP _rqapp_drpd_numeric(SEXP t1SEXP, SEXP t2SEXP, SEXP wsSEXP, SEXP radiusSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< int >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    rcpp_result_gen = Rcpp::wrap(drpd_numeric(t1, t2, ws, radius));
    return rcpp_result_gen;
END_RCPP
}
// fnn
arma::vec fnn(arma::vec x, int tao, int mmax, double rtol, double atol);
RcppExport SEXP _rqapp_fnn(SEXP xSEXP, SEXP taoSEXP, SEXP mmaxSEXP, SEXP rtolSEXP, SEXP atolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type tao(taoSEXP);
    Rcpp::traits::input_parameter< int >::type mmax(mmaxSEXP);
    Rcpp::traits::input_parameter< double >::type rtol(rtolSEXP);
    Rcpp::traits::input_parameter< double >::type atol(atolSEXP);
    rcpp_result_gen = Rcpp::wrap(fnn(x, tao, mmax, rtol, atol));
    return rcpp_result_gen;
END_RCPP
}
// jrqa
List jrqa(arma::mat& ts, unsigned int embed, unsigned int delay, int normalize, int rescale, int mindiagline, int minvertline, int t_win, double radius, int whiteline, int recpt);
RcppExport SEXP _rqapp_jrqa(SEXP tsSEXP, SEXP embedSEXP, SEXP delaySEXP, SEXP normalizeSEXP, SEXP rescaleSEXP, SEXP mindiaglineSEXP, SEXP minvertlineSEXP, SEXP t_winSEXP, SEXP radiusSEXP, SEXP whitelineSEXP, SEXP recptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type ts(tsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type embed(embedSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type delay(delaySEXP);
    Rcpp::traits::input_parameter< int >::type normalize(normalizeSEXP);
    Rcpp::traits::input_parameter< int >::type rescale(rescaleSEXP);
    Rcpp::traits::input_parameter< int >::type mindiagline(mindiaglineSEXP);
    Rcpp::traits::input_parameter< int >::type minvertline(minvertlineSEXP);
    Rcpp::traits::input_parameter< int >::type t_win(t_winSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< int >::type whiteline(whitelineSEXP);
    Rcpp::traits::input_parameter< int >::type recpt(recptSEXP);
    rcpp_result_gen = Rcpp::wrap(jrqa(ts, embed, delay, normalize, rescale, mindiagline, minvertline, t_win, radius, whiteline, recpt));
    return rcpp_result_gen;
END_RCPP
}
// mdrqa
List mdrqa(arma::mat& ts, unsigned int embed, unsigned int delay, int normalize, int rescale, int mindiagline, int minvertline, int t_win, double radius, int recpt);
RcppExport SEXP _rqapp_mdrqa(SEXP tsSEXP, SEXP embedSEXP, SEXP delaySEXP, SEXP normalizeSEXP, SEXP rescaleSEXP, SEXP mindiaglineSEXP, SEXP minvertlineSEXP, SEXP t_winSEXP, SEXP radiusSEXP, SEXP recptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type ts(tsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type embed(embedSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type delay(delaySEXP);
    Rcpp::traits::input_parameter< int >::type normalize(normalizeSEXP);
    Rcpp::traits::input_parameter< int >::type rescale(rescaleSEXP);
    Rcpp::traits::input_parameter< int >::type mindiagline(mindiaglineSEXP);
    Rcpp::traits::input_parameter< int >::type minvertline(minvertlineSEXP);
    Rcpp::traits::input_parameter< int >::type t_win(t_winSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< int >::type recpt(recptSEXP);
    rcpp_result_gen = Rcpp::wrap(mdrqa(ts, embed, delay, normalize, rescale, mindiagline, minvertline, t_win, radius, recpt));
    return rcpp_result_gen;
END_RCPP
}
// mdpsr
arma::mat mdpsr(arma::mat& x, int dim, int tau);
RcppExport SEXP _rqapp_mdpsr(SEXP xSEXP, SEXP dimSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(mdpsr(x, dim, tau));
    return rcpp_result_gen;
END_RCPP
}
// tsHistogram
NumericMatrix tsHistogram(NumericVector& x, int& tlag, const int& npartitions);
RcppExport SEXP _rqapp_tsHistogram(SEXP xSEXP, SEXP tlagSEXP, SEXP npartitionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int& >::type tlag(tlagSEXP);
    Rcpp::traits::input_parameter< const int& >::type npartitions(npartitionsSEXP);
    rcpp_result_gen = Rcpp::wrap(tsHistogram(x, tlag, npartitions));
    return rcpp_result_gen;
END_RCPP
}
// mutualInformation
NumericVector mutualInformation(const NumericVector& tseries, const int& maxlag, const int& npartitions);
RcppExport SEXP _rqapp_mutualInformation(SEXP tseriesSEXP, SEXP maxlagSEXP, SEXP npartitionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type tseries(tseriesSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxlag(maxlagSEXP);
    Rcpp::traits::input_parameter< const int& >::type npartitions(npartitionsSEXP);
    rcpp_result_gen = Rcpp::wrap(mutualInformation(tseries, maxlag, npartitions));
    return rcpp_result_gen;
END_RCPP
}
// rqa
List rqa(arma::vec ts1, arma::vec ts2, unsigned int embed, unsigned int delay, int normalize, int rescale, int mindiagline, int minvertline, int t_win, double radius, int whiteline, int recpt);
RcppExport SEXP _rqapp_rqa(SEXP ts1SEXP, SEXP ts2SEXP, SEXP embedSEXP, SEXP delaySEXP, SEXP normalizeSEXP, SEXP rescaleSEXP, SEXP mindiaglineSEXP, SEXP minvertlineSEXP, SEXP t_winSEXP, SEXP radiusSEXP, SEXP whitelineSEXP, SEXP recptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type ts1(ts1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ts2(ts2SEXP);
    Rcpp::traits::input_parameter< unsigned int >::type embed(embedSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type delay(delaySEXP);
    Rcpp::traits::input_parameter< int >::type normalize(normalizeSEXP);
    Rcpp::traits::input_parameter< int >::type rescale(rescaleSEXP);
    Rcpp::traits::input_parameter< int >::type mindiagline(mindiaglineSEXP);
    Rcpp::traits::input_parameter< int >::type minvertline(minvertlineSEXP);
    Rcpp::traits::input_parameter< int >::type t_win(t_winSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< int >::type whiteline(whitelineSEXP);
    Rcpp::traits::input_parameter< int >::type recpt(recptSEXP);
    rcpp_result_gen = Rcpp::wrap(rqa(ts1, ts2, embed, delay, normalize, rescale, mindiagline, minvertline, t_win, radius, whiteline, recpt));
    return rcpp_result_gen;
END_RCPP
}
// psr
arma::mat psr(arma::vec& x, int dim, int tau);
RcppExport SEXP _rqapp_psr(SEXP xSEXP, SEXP dimSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(psr(x, dim, tau));
    return rcpp_result_gen;
END_RCPP
}
// dist_mat
void dist_mat(arma::mat& x1, arma::mat& x2, arma::mat& dist);
RcppExport SEXP _rqapp_dist_mat(SEXP x1SEXP, SEXP x2SEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type dist(distSEXP);
    dist_mat(x1, x2, dist);
    return R_NilValue;
END_RCPP
}
// rp
void rp(arma::mat& x, double radius);
RcppExport SEXP _rqapp_rp(SEXP xSEXP, SEXP radiusSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    rp(x, radius);
    return R_NilValue;
END_RCPP
}
// line_stats
List line_stats(arma::mat& rp, int mindiagline, int minvertline, int t_win);
RcppExport SEXP _rqapp_line_stats(SEXP rpSEXP, SEXP mindiaglineSEXP, SEXP minvertlineSEXP, SEXP t_winSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< int >::type mindiagline(mindiaglineSEXP);
    Rcpp::traits::input_parameter< int >::type minvertline(minvertlineSEXP);
    Rcpp::traits::input_parameter< int >::type t_win(t_winSEXP);
    rcpp_result_gen = Rcpp::wrap(line_stats(rp, mindiagline, minvertline, t_win));
    return rcpp_result_gen;
END_RCPP
}
// diagonal_lines
arma::vec diagonal_lines(arma::mat& rp, int mindiagline);
RcppExport SEXP _rqapp_diagonal_lines(SEXP rpSEXP, SEXP mindiaglineSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< int >::type mindiagline(mindiaglineSEXP);
    rcpp_result_gen = Rcpp::wrap(diagonal_lines(rp, mindiagline));
    return rcpp_result_gen;
END_RCPP
}
// vertical_lines
arma::vec vertical_lines(arma::mat& rp, int minvertline);
RcppExport SEXP _rqapp_vertical_lines(SEXP rpSEXP, SEXP minvertlineSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< int >::type minvertline(minvertlineSEXP);
    rcpp_result_gen = Rcpp::wrap(vertical_lines(rp, minvertline));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rqapp_autocor", (DL_FUNC) &_rqapp_autocor, 2},
    {"_rqapp_drpd_cat", (DL_FUNC) &_rqapp_drpd_cat, 3},
    {"_rqapp_seq_int", (DL_FUNC) &_rqapp_seq_int, 2},
    {"_rqapp_count_if", (DL_FUNC) &_rqapp_count_if, 1},
    {"_rqapp_drpd_numeric", (DL_FUNC) &_rqapp_drpd_numeric, 4},
    {"_rqapp_fnn", (DL_FUNC) &_rqapp_fnn, 5},
    {"_rqapp_jrqa", (DL_FUNC) &_rqapp_jrqa, 11},
    {"_rqapp_mdrqa", (DL_FUNC) &_rqapp_mdrqa, 10},
    {"_rqapp_mdpsr", (DL_FUNC) &_rqapp_mdpsr, 3},
    {"_rqapp_tsHistogram", (DL_FUNC) &_rqapp_tsHistogram, 3},
    {"_rqapp_mutualInformation", (DL_FUNC) &_rqapp_mutualInformation, 3},
    {"_rqapp_rqa", (DL_FUNC) &_rqapp_rqa, 12},
    {"_rqapp_psr", (DL_FUNC) &_rqapp_psr, 3},
    {"_rqapp_dist_mat", (DL_FUNC) &_rqapp_dist_mat, 3},
    {"_rqapp_rp", (DL_FUNC) &_rqapp_rp, 2},
    {"_rqapp_line_stats", (DL_FUNC) &_rqapp_line_stats, 4},
    {"_rqapp_diagonal_lines", (DL_FUNC) &_rqapp_diagonal_lines, 2},
    {"_rqapp_vertical_lines", (DL_FUNC) &_rqapp_vertical_lines, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_rqapp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
